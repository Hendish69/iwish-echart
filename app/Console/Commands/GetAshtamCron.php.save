<?php

namespace App\Console\Commands;
use Illuminate\Support\Facades\DB;
use App\Models\Api\TxAshtam;
use App\Models\Api\TxAshtamForecast;
use App\Models\Api\TxCdm;
use App\Models\Api\TxCdmLog;
use Illuminate\Console\Command;
use App\Models\User;
use Illuminate\Support\Facades\Mail;
use App\Mail\VonaMail;


class GetAshtamCron extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'getashtam:cron';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Hourly update Ashtam API';

    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }
    function wksekarang(){
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL,"http://103.234.195.99/aim/apps/utc.php");
	curl_setopt($ch, CURLOPT_POST, 1);
	curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query(array('id' => $ID)));
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	$server_output = curl_exec($ch);		
	return $server_output;
    }
    private function clearStr($str, $slash=true){
        $text = preg_replace("/[\r\n]+/", " ", trim($str));
        $text = nl2br($text);
        if($slash){
            $text = addslashes($text);
        }
        return $text;
    }
    private function _initCurl($url, $token=null){
        $curl = curl_init();
        curl_setopt_array($curl, array(
          CURLOPT_URL => $url,
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 0,
          CURLOPT_FOLLOWLOCATION => true,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "GET",
        ));
        $response = curl_exec($curl);
        curl_close($curl);
       
        return $response;
    }
    private function getData($url){
        $ret = $this->_getData($url);
        return $ret;
    }
    private function _getData($url){
        // $token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvbWFnbWEuZXNkbS5nby5pZFwvYXBpXC9sb2dpblwvc3Rha2Vob2xkZXIiLCJpYXQiOjE1NzkzMTQ5NTMsImV4cCI6MTYxMDkzNzM1MywibmJmIjoxNTc5MzE0OTUzLCJqdGkiOiJvS2xUR0FzeFRsWjdha0twIiwic3ViIjo0LCJwcnYiOiI0YTlkOWEyZDI2ODAyYzMxMmU4ZTVhNWJlNjBmZjI2ZjBmYzYzZDdkIiwic291cmNlIjoiTUFHTUEgSW5kb25lc2lhIiwiYXBpX3ZlcnNpb24iOiJ2MSIsImRheXNfcmVtYWluaW5nIjozNjUsImV4cGlyZWRfYXQiOiIyMDIxLTAxLTE4IDAwOjAwOjAwIn0.uasdZ-aTUgS5HVv4chefheoDfzYq3PqSK8CP0ObpNd8";
        $response = $this->_initCurl($url);        
        return json_decode($response);
    }
    private function processing($ashtam){
        // $ashtam = get_object_vars($ashtam);
        \Log::info(print_r($ashtam));
        $len = isset($ashtam) ? count($ashtam) : 0;
        \Log::Info('jml issued: '.$len);
        for($i=0; $i < $len; $i++){
            // $ashtam_data = $ashtam[$i];
            $ashtam_data = $ashtam[$i];
            $volcano = explode(' ',$ashtam_data['C']);
            // $latlon= preg_split('/(?<=\D)(?=\d)|\d+\K/', $ashtam_data['D']);

		    $latlon = explode(' ',$ashtam_data['D']);
            $latlon[1] = isset($latlon[1]) ? $latlon[1] : '';
            // if(substr($ashtam_data['issued'],0,10)==$tanggal){ 
                $fsqlcek = DB::table('tx_ashtam')->selectRaw('count(*) jml')
                                ->where('ashtam_id', trim($ashtam_data['id']) )->get();
                // $fsqlcek->next(); 
                \Log::Info('Issued->'.$fsqlcek[0]->jml);
                if( $fsqlcek[0]->jml < 1 ){
                    $tx_ashtam = TxAshtam::create(
                        [                    
                            "ashtam_id"				=> $ashtam_data['id'], 
                            "ashtam_number"			=> $ashtam_data['VA'] . $ashtam_data['state'] . $ashtam_data['serial_nr'], 
                            "ashtam_update_time"	=> $ashtam_data['tgl'] .' '. $ashtam_data['jam'], 
                            "ashtam_fir"			=> $ashtam_data['A'], 
                            "ashtam_utc"			=> $ashtam_data['issued'], 
                            "ashtam_utc_issued"		=> $ashtam_data['B'], 
                            "ashtam_volcano"		=> trim(str_replace(end($volcano),'',$ashtam_data['C'])), 
                            "ashtam_volcano_number"	=> end($volcano), 
                            "ashtam_navaid_lon_dms"	=> $latlon[0], 
                            "ashtam_navaid_lat_dms"	=> $latlon[1], 
                            "ashtam_alert_code"		=> str_replace('      ','',$this->clearStr($ashtam_data['E'])), 
                            "ashtam_ahve"			=> str_replace('      ','',$this->clearStr($ashtam_data['F'])), 
                            "ashtam_ash_direction"	=> str_replace('      ','',$this->clearStr($ashtam_data['G'])),
